/*    @PostMapping("")
    public Object addEvaluationToEmployeeInProject(@PathVariable Long projectId, @PathVariable Long employeeId, @RequestBody EvaluationDTO evaluationDTO){
        evaluationDTO.setProjectId(projectId);
        evaluationDTO.setEvaluatorId(employeeId);
        Evaluation evaluation=evaluationConverter.toEntity(evaluationDTO);
        Project project=projectRepository.findById(projectId).orElseThrow(
                ()->new ElementNotExistException("Project not exist with id ="+projectId)
        );
        EmployeeInProject employeeInProject=employeeInProjectRepository.findByProject_IdAndEmployee_Id(projectId,employeeId).orElseThrow(
                ()->new ElementNotExistException("Employee with id = "+employeeId+" not exist with in project")
        );
        EmployeeInProject evaluateeInProject=employeeInProjectRepository.findByProject_IdAndEmployee_Id(projectId,evaluationDTO.getEvaluateeId()).orElseThrow(
                ()->new ElementNotExistException("Evaluatee with id = "+evaluationDTO.getEvaluateeId()+" not exist in project")
        );
        evaluation.setProject(project);
        evaluation.setEvaluateeInProject(evaluateeInProject);
        evaluation.setEmployeeInProject(employeeInProject);
        evaluation=evaluationRepository.save(evaluation);

        return evaluation
                ;
    }*/